generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id      String @default(uuid()) @unique @id
  name      String
  email     String @unique
  password  String
  role      Role @default(USER)
  profile   Profile?
  orders    Order[] 
  payment   Payment_detail[]
}

model Profile {
  id String @default(uuid()) @unique @id
  phone String @unique
  address String
  user   User @relation(fields: [userId], references: [id])
  userId String  @unique 
}

model Category {
  id          String @default(uuid()) @unique @id
  categoryName          String @unique
  product       Product[]
}

model Product {
  id          String @default(uuid()) @unique @id
  name          String  
  stock         Int 
  price         Int
  image         String? // nullable - working
  desc          String
  cloudId       String? // nullable - working

  category      Category @relation(fields: [categoryId], references: [id])
  categoryId    String
  
  orderDetail   Order_detail[]
}

model Reviews {
  id          String @default(uuid()) @unique @id
  comment       String
  productId     String
  // Relation with product
}

model Order {
  id            String @default(uuid()) @unique @id
  userId        String 
  user          User  @relation(fields: [userId], references: [id])
  orderDetail   Order_detail[]
  paymentDetail Payment_detail? 
  trackOrder    Track_order?
  address       String
  total         Int
  time          DateTime @default(now())
}

model Payment_detail {
  id            String @default(uuid()) @unique @id
  amount        Int
  currency      String
  time          DateTime @default(now())
  userId        String
  user          User @relation(fields: [userId], references: [id])
  orderId       String @unique
  order         Order @relation(fields: [orderId], references: [id])
}

model Order_detail {
  id            String @default(uuid()) @unique @id
  orderId       String
  order         Order @relation(fields: [orderId], references: [id])
  productId     String 
  product       Product  @relation(fields: [productId], references: [id])
  subTotal      Int
  quantity      Int
  price         Int
}

model Track_order {
  id          String @default(uuid()) @unique @id
  orderId       String @unique
  order         Order @relation(fields: [orderId], references: [id])
  address       String
  status        Status @default(PREPARING)
}

enum Role {
  USER
  ADMIN
  EMPLOYEE
}

enum Status {
  PREPARING
  SHIPPED
  DELIVERD
}
